import { generateParenthesis, generateParenthesis2 } from './0022-generateParenthesis'
import { sort } from './util'

it.each(
  //  prettier-ignore
  [
    [
      3,
      ["((()))","(()())","(())()","()(())","()()()"]
    ],
    [
      1,
      ["()"]
    ],
    [
      5,

    ]
  ]
)('should work %#', (input, output) => {
  expect(sort(generateParenthesis(input))).toBe(sort(output))
  expect(sort(generateParenthesis2(input))).toBe(sort(output))
})
